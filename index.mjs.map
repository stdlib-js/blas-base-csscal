{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/csscal.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reinterpret from '@stdlib/strided-base-reinterpret-complex64';\nimport { strided as scale } from '@stdlib/complex-float32-base-scale';\n\n\n// MAIN //\n\n/**\n* Scales a single-precision complex floating-point vector by a single-precision floating-point constant.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar constant\n* @param {Complex64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @returns {Complex64Array} input array\n*\n* @example\n* import Complex64Array from '@stdlib/array-complex64';\n*\n* var x = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\n*\n* csscal( 3, 2.0, x, 1, 0 );\n* // x => <Complex64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0, 12.0 ]\n*/\nfunction csscal( N, alpha, x, strideX, offsetX ) {\n\tvar x32;\n\tvar ix;\n\tvar sx;\n\tvar i;\n\n\tif ( N <= 0 || alpha === 1.0 ) {\n\t\treturn x;\n\t}\n\t// Reinterpret the input array as a real-valued array of interleaved real and imaginary components:\n\tx32 = reinterpret( x, 0 );\n\n\t// Adjust the stride and offset accordingly:\n\tix = offsetX * 2;\n\tsx = strideX * 2;\n\n\tfor ( i = 0; i < N; i++ ) {\n\t\tscale( alpha, x32, 1, ix, x32, 1, ix );\n\t\tix += sx;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nexport default csscal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Scales a single-precision complex floating-point vector by a single-precision floating-point constant.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar constant\n* @param {Complex64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @returns {Complex64Array} input array\n*\n* @example\n* import Complex64Array from '@stdlib/array-complex64';\n*\n* var x = new Complex64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ] );\n*\n* csscal( 3, 2.0, x, 1 );\n* // x => <Complex64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0, 12.0 ]\n*/\nfunction csscal( N, alpha, x, strideX ) {\n\treturn ndarray( N, alpha, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default csscal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport csscal from './csscal.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( csscal, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default csscal;\n"],"names":["csscal","N","alpha","x","strideX","offsetX","x32","ix","sx","i","reinterpret","scale","ndarray","stride2offset","setReadOnly"],"mappings":";;mbA8CA,SAASA,EAAQC,EAAGC,EAAOC,EAAGC,EAASC,GACtC,IAAIC,EACAC,EACAC,EACAC,EAEJ,GAAKR,GAAK,GAAe,IAAVC,EACd,OAAOC,EASR,IANAG,EAAMI,EAAaP,EAAG,GAGtBI,EAAe,EAAVF,EACLG,EAAe,EAAVJ,EAECK,EAAI,EAAGA,EAAIR,EAAGQ,IACnBE,EAAOT,EAAOI,EAAK,EAAGC,EAAID,EAAK,EAAGC,GAClCA,GAAMC,EAEP,OAAOL,CACR,CCtBA,SAASH,EAAQC,EAAGC,EAAOC,EAAGC,GAC7B,OAAOQ,EAASX,EAAGC,EAAOC,EAAGC,EAASS,EAAeZ,EAAGG,GACzD,CClBAU,EAAAd,EAAA,UAAAY"}